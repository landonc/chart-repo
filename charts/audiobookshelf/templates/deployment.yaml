apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "audiobookshelf.fullname" . }}
  labels:
    {{- include "audiobookshelf.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "audiobookshelf.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "audiobookshelf.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "audiobookshelf.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: TZ
              value: {{ .Values.timezone }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- $has_vols := false }}
            {{- range .Values.persistence }}        
            {{- if and .enabled}}
            {{- $has_vols = true }}
            {{- if eq "pvc" .type }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
            {{- end }}
            {{- if eq "nfs" .type }}
            {{- range .shares }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
            {{- end }}
            {{- end }}
            {{- end }}        
            {{- end }}
            {{- if eq $has_vols false }}
              []
            {{- end }}  
                     
          {{- range .Values.persistentVolumeClaims }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              readOnly: {{ .readOnly }}
          {{- end }}
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}      
      volumes:
        {{- if $has_vols }}        
        {{- range .Values.persistence }}
        {{- if and .enabled (eq "pvc" .type)}}
        - name: {{ .name }}          
          persistentVolumeClaim:          
            claimName: {{ .existingClaim | default (printf "%s-%s" (include "audiobookshelf.fullname" $ ) .name) }}
        {{- end }}
        {{- if and .enabled (eq "nfs" .type)}}
        {{ $nfsServer := .server }}
        {{- range .shares}}
        - name: {{ .name }}          
          nfs:
            server: {{ $nfsServer }}
            path: {{ .path }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- else }}
        []        
        {{- end }}
        {{- with .Values.volumes }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}      
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
